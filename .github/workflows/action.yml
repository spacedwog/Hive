name: Build, Attest and Deploy

on:
    workflow_dispatch:

permissions:
    id-token: write
    contents: read
    security-events: write

jobs:
    attest-and-deploy:
        runs-on: ubuntu-latest

        # Valores padrão para o editor, sobrescritos pelos secrets no GitHub
        env:
          ESP32_SOFTAP_IP: 0.0.0.0
          ESP32_STA_IP: 0.0.0.0

        steps:
          # 1️⃣ Checkout do repositório
          - name: Checkout repository
            uses: actions/checkout@v4

          # 2️⃣ Build do artefato
          - name: Build artifact
            run: |
              mkdir -p dist
              echo "hello world" > dist/my-app.zip

          # 3️⃣ Attestação do artefato
          - name: Attest Build Provenance
            uses: actions/attest-build-provenance@v3
            with:
              subject-path: 'dist/my-app.zip'
              github-token: ${{ secrets.MY_PAT }}
              push-to-registry: false
              show-summary: true

          # 4️⃣ Deploy no Vercel
          - name: Deploy to Vercel
            env:
              VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
            run: |
              npm install -g vercel
              vercel --prod --yes --token $VERCEL_TOKEN

          # 5️⃣ Uso das variáveis do ESP32 (seguras)
          - name: Test ESP32 IPs
            env:
              ESP32_SOFTAP_IP: ${{ secrets.ESP32_SOFTAP_IP }}
              ESP32_STA_IP: ${{ secrets.ESP32_STA_IP }}
            run: |
              echo "SoftAP IP: $ESP32_SOFTAP_IP"
              echo "STA IP: $ESP32_STA_IP"